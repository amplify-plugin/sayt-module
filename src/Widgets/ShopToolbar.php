<?php

namespace Amplify\System\Sayt\Widgets;

use Amplify\Widget\Abstracts\BaseComponent;
use App\Helpers\UtilityHelper;
use Closure;
use Illuminate\Contracts\View\View;

/**
 * @class ShopToolbar
 */
class ShopToolbar extends BaseComponent
{
    /**
     * @var array
     */
    public $options;

    private $productsData;

    public bool $showItemCount = false;

    public bool $showSortingOption = false;

    public bool $showPerPageOption = false;

    public bool $showProductViewChanger = false;

    /**
     * Create a new component instance.
     *
     * @throws \ErrorException
     */
    public function __construct(
        string $showItemCount = 'false',
        string $showPerPageOption = 'false',
        string $showSortingOption = 'false',
        string $showProductViewChanger = 'false'
    ) {
        parent::__construct();
        $this->showItemCount = UtilityHelper::typeCast($showItemCount, 'bool');
        $this->showPerPageOption = UtilityHelper::typeCast($showPerPageOption, 'bool');
        $this->showSortingOption = UtilityHelper::typeCast($showSortingOption, 'bool');
        $this->showProductViewChanger = UtilityHelper::typeCast($showProductViewChanger, 'bool');

        $this->productsData = store()->eaProductsData?->getProducts() ?? new \stdClass;

        if (isset($this->productsData->itemDescription)) {
            $this->productsData = $this->productsData->itemDescription;
        }
    }

    /**
     * Whether the component should be rendered
     */
    public function shouldRender(): bool
    {
        return isset($this->productsData->totalItems);
    }

    /**
     * Get the view / contents that represent the component.
     */
    public function render(): View|Closure|string
    {
        $currentPage = $this->productsData->currentPage ?? 1;

        $productOrder = request('order_by', 'asc');

        $perPage = request('resultsPerPage', $this->productsData->resultsPerPage ?? getPaginationLengths()[0]);

        $view = match (config('amplify.basic.client_code')) {
            'ACT' => 'widget::client.cal-tool.product.shop-toolbar',
            'RHS' => 'widget::client.rhsparts.product.shop-toolbar',
            'STV' => 'widget::client.steven.product.shop-toolbar',
            default => 'sayt::widgets.shop-toolbar',
        };

        return view($view, compact('currentPage', 'productOrder', 'perPage'));
    }

    public function productView()
    {
        return request('view', config('amplify.frontend.shop_page_default_view'));
    }

    public function itemDescription()
    {
        $act = 'Items '.number_format(($this->productsData->firstItem ?? 0)).' - '.number_format(($this->productsData->lastItem ?? 0)).' of '.number_format(($this->productsData->totalItems ?? 0));
        $default = 'Showing: '.number_format($this->productsData->firstItem ?? 0).' - '.number_format($this->productsData->lastItem ?? 0).' of '.number_format($this->productsData->totalItems ?? 0).' items';

        return match (config('amplify.basic.client_code')) {
            'ACT' => $act,
            default => $default,
        };
    }

    public function htmlAttributes(): string
    {
        if (! $this->attributes->has('class')) {
            $this->attributes = $this->attributes->class(['row pb-3']);
        }

        return parent::htmlAttributes(); // TODO: Change the autogenerated stub
    }
}
